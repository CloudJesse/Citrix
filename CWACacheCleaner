<#
    Script Name: Citrix CWA Cleanup Reset Script
    Author: Jesse Boehm
    Version: 3.2
    Description: 
        This script kills specified Citrix Workspace processes, deletes files in specified Citrix directories, 
        and removes the directories themselves. It includes error and warning handling with messages 
        displayed in green text for informational messages, light blue text for warnings, and red text for errors.
        The messages are stored and grouped by type (Info, Warning, Error) and displayed at the end in that order.
#>

# Arrays to store messages
$infoMessages = New-Object System.Collections.Generic.List[System.String]
$errorMessages = New-Object System.Collections.Generic.List[System.String]
$warningMessages = New-Object System.Collections.Generic.List[System.String]

# Function to log errors and store them for later output
function Log-Error {
    param (
        [string]$Message
    )
    $errorMessages.Add("[ERROR] $Message")
}

# Function to log warnings and store them for later output
function Log-Warning {
    param (
        [string]$Message
    )
    $warningMessages.Add("[WARNING] $Message")
}

# Function to log informational messages and store them for later output
function Log-Info {
    param (
        [string]$Message
    )
    $infoMessages.Add("[INFO] $Message")
}

# Define the Citrix processes to kill
$citrixProcesses = @("SelfService", "Receiver", "redirector")

# Kill the processes
foreach ($process in $citrixProcesses) {
    try {
        $proc = Get-Process -Name $process -ErrorAction SilentlyContinue
        if ($proc) {
            $proc | Stop-Process -Force -ErrorAction Stop
            Log-Info "Process '$process' terminated successfully."
        } else {
            Log-Warning "Process '$process' not found."
        }
    } catch {
        Log-Error "Failed to terminate process '$process'."
    }
}

# Define the folder paths
$citrixPaths = @(
    "$env:LOCALAPPDATA\citrix",
    "$env:APPDATA\citrix",
    "$env:APPDATA\icaclient"
)

# Delete files and folders
foreach ($path in $citrixPaths) {
    try {
        if (Test-Path $path) {
            Log-Info "Folder '$path' exists. Proceeding with file and folder deletion."

            # Remove all files in the directory
            Get-ChildItem -Path $path -Recurse -Force -ErrorAction Stop | Remove-Item -Force -Recurse -ErrorAction Stop
            Log-Info "Files in '$path' deleted successfully."

            # Remove the folder itself
            Remove-Item -Path $path -Recurse -Force -ErrorAction Stop
            Log-Info "Folder '$path' deleted successfully."
        } else {
            Log-Warning "Folder '$path' does not exist."
        }
    } catch {
        Log-Error "Failed to delete folder or files in '$path'."
    }
}

# Output all stored messages, grouped by type

# Output Info messages (Green text)
if ($infoMessages.Count -gt 0) {
    Write-Host "`n--- Informational Messages ---" -ForegroundColor Green
    foreach ($message in $infoMessages) {
        Write-Host $message -ForegroundColor Green
    }
}

# Output Warning messages (Light blue text)
if ($warningMessages.Count -gt 0) {
    Write-Host "`n--- Warning Messages ---" -ForegroundColor Cyan
    foreach ($message in $warningMessages) {
        Write-Host $message -ForegroundColor Cyan
    }
}

# Output Error messages (Red text)
if ($errorMessages.Count -gt 0) {
    Write-Host "`n--- Error Messages ---" -ForegroundColor Red
    foreach ($message in $errorMessages) {
        Write-Host $message -ForegroundColor Red
    }
}
